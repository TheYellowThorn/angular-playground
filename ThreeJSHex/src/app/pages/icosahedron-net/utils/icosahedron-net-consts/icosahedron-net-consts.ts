import * as THREE from 'three';
import { EQUILATERAL_AXIS } from './../axis/equilateral-axis';

const SECTOR_0_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_1_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_2_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_3_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(2.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_4_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(3.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_5_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_6_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(0.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_7_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_8_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_9_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(3.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_10_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_11_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_12_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_13_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(2.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_14_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(3.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_15_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_16_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(0.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_17_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)     
];
const SECTOR_18_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)  
];
const SECTOR_19_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(3.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)     
];

const SECTOR_0_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_0_UPPER_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, 1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_0_UPPER_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-0.5, 1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, 1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_0_UPPER_RIGHT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(0.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, 1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];

const SECTOR_1_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(0.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_2_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_3_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(2.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(2.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];
const SECTOR_4_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(3.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(3.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(4.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)
];

const SECTOR_5_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)   
];
const SECTOR_5_LEFT2_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_5_UPPER_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.0, 0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -0.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)   
];
const SECTOR_15_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)   
];
const SECTOR_15_LEFT2_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-2.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_15_BOTTOM_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-1.0, -3.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_15_BOTTOM_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-1.0, -3.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(-0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, -3.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_15_BOTTOM_RIGHT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, -3.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)      
];
const SECTOR_16_LEFT_BOUNDS: THREE.Vector3[] = [
    new THREE.Vector3(-0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.0, -1.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0),
    new THREE.Vector3(0.5, -2.5 * EQUILATERAL_AXIS.FULL_HEIGHT, 0)   
];

enum BOUNDS {
    SECTOR_0_BOUNDS = 0,
    SECTOR_1_BOUNDS = 1,
    SECTOR_2_BOUNDS = 2,
    SECTOR_3_BOUNDS = 3,
    SECTOR_4_BOUNDS = 4,
    SECTOR_5_BOUNDS = 5,
    SECTOR_6_BOUNDS = 6,
    SECTOR_7_BOUNDS = 7,
    SECTOR_8_BOUNDS = 8,
    SECTOR_9_BOUNDS = 9,
    SECTOR_10_BOUNDS = 10,
    SECTOR_11_BOUNDS = 11,
    SECTOR_12_BOUNDS = 12,
    SECTOR_13_BOUNDS = 13,
    SECTOR_14_BOUNDS = 14,
    SECTOR_15_BOUNDS = 15,
    SECTOR_16_BOUNDS = 16,
    SECTOR_17_BOUNDS = 17,
    SECTOR_18_BOUNDS = 18,
    SECTOR_19_BOUNDS = 19,

    SECTOR_0_LEFT_BOUNDS = 20,
    SECTOR_0_UPPER_LEFT_BOUNDS = 21,
    SECTOR_0_UPPER_BOUNDS = 22,
    SECTOR_0_UPPER_RIGHT_BOUNDS = 23,

    SECTOR_1_LEFT_BOUNDS = 24,
    SECTOR_2_LEFT_BOUNDS = 25,
    SECTOR_3_LEFT_BOUNDS = 26,
    SECTOR_4_LEFT_BOUNDS = 27,

    SECTOR_5_LEFT_BOUNDS = 28,
    SECTOR_5_LEFT2_BOUNDS = 29,
    SECTOR_5_UPPER_LEFT_BOUNDS = 30,

    SECTOR_15_LEFT_BOUNDS = 31,
    SECTOR_15_LEFT2_BOUNDS = 32,
    SECTOR_15_BOTTOM_LEFT_BOUNDS = 33,
    SECTOR_15_BOTTOM_BOUNDS = 34,
    SECTOR_15_BOTTOM_RIGHT_BOUNDS = 35,
    SECTOR_16_LEFT_BOUNDS = 36
}



export class ICOSAHEDRON_NET_CONSTS {

    public static VALID_BOUNDS: any = {
        SECTOR_0_BOUNDS: SECTOR_0_BOUNDS,
        SECTOR_1_BOUNDS: SECTOR_1_BOUNDS,
        SECTOR_2_BOUNDS: SECTOR_2_BOUNDS,
        SECTOR_3_BOUNDS: SECTOR_3_BOUNDS,
        SECTOR_4_BOUNDS: SECTOR_4_BOUNDS,
        SECTOR_5_BOUNDS: SECTOR_5_BOUNDS,
        SECTOR_6_BOUNDS: SECTOR_6_BOUNDS,
        SECTOR_7_BOUNDS: SECTOR_7_BOUNDS,
        SECTOR_8_BOUNDS: SECTOR_8_BOUNDS,
        SECTOR_9_BOUNDS: SECTOR_9_BOUNDS,
        SECTOR_10_BOUNDS: SECTOR_10_BOUNDS,
        SECTOR_11_BOUNDS: SECTOR_11_BOUNDS,
        SECTOR_12_BOUNDS: SECTOR_12_BOUNDS,
        SECTOR_13_BOUNDS: SECTOR_13_BOUNDS,
        SECTOR_14_BOUNDS: SECTOR_14_BOUNDS,
        SECTOR_15_BOUNDS: SECTOR_15_BOUNDS,
        SECTOR_16_BOUNDS: SECTOR_16_BOUNDS,
        SECTOR_17_BOUNDS: SECTOR_17_BOUNDS,
        SECTOR_18_BOUNDS: SECTOR_18_BOUNDS,
        SECTOR_19_BOUNDS: SECTOR_19_BOUNDS
    }

    public static SEMI_VALID_BOUNDS: any = {
        SECTOR_0_LEFT_BOUNDS: SECTOR_0_LEFT_BOUNDS,
        SECTOR_0_UPPER_LEFT_BOUNDS: SECTOR_0_UPPER_LEFT_BOUNDS,
        SECTOR_0_UPPER_BOUNDS: SECTOR_0_UPPER_BOUNDS,
        SECTOR_0_UPPER_RIGHT_BOUNDS: SECTOR_0_UPPER_RIGHT_BOUNDS,

        SECTOR_1_LEFT_BOUNDS: SECTOR_1_LEFT_BOUNDS,
        SECTOR_2_LEFT_BOUNDS: SECTOR_2_LEFT_BOUNDS,
        SECTOR_3_LEFT_BOUNDS: SECTOR_3_LEFT_BOUNDS,
        SECTOR_4_LEFT_BOUNDS: SECTOR_4_LEFT_BOUNDS,

        SECTOR_5_LEFT_BOUNDS: SECTOR_5_LEFT_BOUNDS,
        SECTOR_5_LEFT2_BOUNDS: SECTOR_5_LEFT2_BOUNDS,
        SECTOR_5_UPPER_LEFT_BOUNDS: SECTOR_5_UPPER_LEFT_BOUNDS,

        SECTOR_15_LEFT_BOUNDS: SECTOR_15_LEFT_BOUNDS,
        SECTOR_15_LEFT2_BOUNDS: SECTOR_15_LEFT2_BOUNDS,
        SECTOR_15_BOTTOM_LEFT_BOUNDS: SECTOR_15_BOTTOM_LEFT_BOUNDS,
        SECTOR_15_BOTTOM_BOUNDS: SECTOR_15_BOTTOM_BOUNDS,
        SECTOR_15_BOTTOM_RIGHT_BOUNDS: SECTOR_15_BOTTOM_RIGHT_BOUNDS,

        SECTOR_16_LEFT_BOUNDS: SECTOR_16_LEFT_BOUNDS
    }

    public static GET_BOUNDS_MIDPOINT(bounds: THREE.Vector3[]): THREE.Vector3 {
        const midpointX: number = (bounds[0].x + bounds[1].x + bounds[2].x) / 3;
        const midpointY: number = (bounds[0].y + bounds[1].y + bounds[2].y) / 3;
        const midpointZ: number = (bounds[0].z + bounds[1].z + bounds[2].z) / 3;
        return new THREE.Vector3(midpointX, midpointY, midpointZ);
    }

    public static BOUNDS: typeof BOUNDS = BOUNDS;

    public static GET_BOUNDS(sector: number): THREE.Vector3[] {
        switch (sector) {
            case BOUNDS.SECTOR_0_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_0_BOUNDS; 
            case BOUNDS.SECTOR_1_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_1_BOUNDS;   
            case BOUNDS.SECTOR_2_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_2_BOUNDS;   
            case BOUNDS.SECTOR_3_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_3_BOUNDS; 
            case BOUNDS.SECTOR_4_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_4_BOUNDS;  
            case BOUNDS.SECTOR_5_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_5_BOUNDS;    
            case BOUNDS.SECTOR_6_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_6_BOUNDS;    
            case BOUNDS.SECTOR_7_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_7_BOUNDS;     
            case BOUNDS.SECTOR_8_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_8_BOUNDS;   
            case BOUNDS.SECTOR_9_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_9_BOUNDS;   
            case BOUNDS.SECTOR_10_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_10_BOUNDS;  
            case BOUNDS.SECTOR_11_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_11_BOUNDS;   
            case BOUNDS.SECTOR_12_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_12_BOUNDS;     
            case BOUNDS.SECTOR_13_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_13_BOUNDS;    
            case BOUNDS.SECTOR_14_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_14_BOUNDS;
            case BOUNDS.SECTOR_15_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_15_BOUNDS;
            case BOUNDS.SECTOR_16_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_16_BOUNDS;
            case BOUNDS.SECTOR_17_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_17_BOUNDS;
            case BOUNDS.SECTOR_18_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_18_BOUNDS;     
            case BOUNDS.SECTOR_19_BOUNDS:
                return this.VALID_BOUNDS.SECTOR_19_BOUNDS;
            case BOUNDS.SECTOR_0_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_0_LEFT_BOUNDS;
            case BOUNDS.SECTOR_0_UPPER_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_0_UPPER_LEFT_BOUNDS;
            case BOUNDS.SECTOR_0_UPPER_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_0_UPPER_BOUNDS;
            case BOUNDS.SECTOR_0_UPPER_RIGHT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_0_UPPER_RIGHT_BOUNDS;

            case BOUNDS.SECTOR_1_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_1_LEFT_BOUNDS;
            case BOUNDS.SECTOR_2_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_2_LEFT_BOUNDS;
            case BOUNDS.SECTOR_3_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_3_LEFT_BOUNDS;
            case BOUNDS.SECTOR_4_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_4_LEFT_BOUNDS;

            case BOUNDS.SECTOR_5_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_5_LEFT_BOUNDS;
            case BOUNDS.SECTOR_5_LEFT2_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_5_LEFT2_BOUNDS;
            case BOUNDS.SECTOR_5_UPPER_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_5_UPPER_LEFT_BOUNDS;

            case BOUNDS.SECTOR_15_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_15_LEFT_BOUNDS;
            case BOUNDS.SECTOR_15_LEFT2_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_15_LEFT2_BOUNDS;
            case BOUNDS.SECTOR_15_BOTTOM_LEFT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_15_BOTTOM_LEFT_BOUNDS;
            case BOUNDS.SECTOR_15_BOTTOM_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_15_BOTTOM_BOUNDS;
            case BOUNDS.SECTOR_15_BOTTOM_RIGHT_BOUNDS:
                return this.SEMI_VALID_BOUNDS.SECTOR_15_BOTTOM_RIGHT_BOUNDS;

            default:
                return this.VALID_BOUNDS.SECTOR_0_BOUNDS;
                
        }
    }
}
